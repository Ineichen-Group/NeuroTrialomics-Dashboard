---
title: "NauroTrialomics"
format: dashboard
logo: stride_lab_logo_transparent.png
---

## Row
```{python}

import math
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from shiny import render, reactive, ui
import plotly.graph_objects as go
import plotly.express as px
import pandas as pd
import panel as pn

pn.extension('plotly')  # To support Plotly in Panel

#| title: GDP and Life Expectancy 

df = pd.read_csv("data_for_dashboard.csv")

# Add "Show All" option to the dropdown options
dropdown_options = ['Show All'] + list(df['cluster'].unique())

# Create a dropdown widget for filtering by "cluster"
cluster_selector = pn.widgets.Select(name='Cluster', options=dropdown_options, value='Show All')

# Define a function to update the scatter plot based on the selected cluster
@pn.depends(cluster_selector)
def update_plot(cluster):
    if cluster == 'Show All':
        filtered_df = df  # Show all data if "Show All" is selected
    else:
        filtered_df = df[df['cluster'] == cluster]  # Filter by selected cluster

    fig = px.scatter(
        filtered_df,
        x='x',  # t-SNE x coordinates
        y='y',  # t-SNE y coordinates
        color=filtered_df['Color'],
        hover_name=filtered_df['hover_text'],
        title=f"t-SNE Visualization of {cluster}" if cluster != 'Show All' else "t-SNE Visualization of All Clusters",
        width=900,
        height=700
    )
    fig.update_traces(marker=dict(size=10, line=dict(width=1, color='DarkSlateGrey')), showlegend=False)
    return fig

# Layout the widgets and the plot
layout = pn.Column(cluster_selector, pn.panel(update_plot))

layout.servable()

```